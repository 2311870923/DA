<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="IuniWmsStockMoveForWl">

    <sql id="selectIuniWmsStockMoveForWlByPageSQL">
        SELECT *
        FROM (SELECT IWSO.SHIPPING_TIME "time",
        IOS.SOURCE_NAME "orderSource",
        IWSO.ORDER_CODE "orderCode",
        CASE IWSO.ORDER_TYPE WHEN '1' THEN '刷单' WHEN '2' THEN '以旧换新' ELSE '普通订单' END "orderType",
        IWSO.OUTER_ORDER_CODE "outerOrderCode",
        IWSO.PAY_NO "payNo",
        IWSO.DELIVERY_CODE "deliveryCode",
        IWSOG.UNIT_PRICE "price",
        IWSOG.QUANTITY "quantity",
        IWS.SKU_CODE "sku",
        IWS.SKU_NAME "skuName",
        IWS.MATERIAL_CODE "materialCode",
        IWW.WARES_NAME "waresName",
        IOS.SOURCE_CODE "orderList"
        FROM SYN_WMS_SALES_ORDER IWSO
        LEFT JOIN SYN_WMS_SALES_ORDER_GOODS IWSOG
        ON IWSO.ID = IWSOG.ORDER_ID
        LEFT JOIN SYN_WMS_SKU IWS
        ON IWSOG.SKU_ID = IWS.ID
        LEFT JOIN SYN_WMS_WARES IWW
        ON IWS.WARES_ID = IWW.ID
        LEFT JOIN (SELECT DISTINCT (WMS_SOURCE_CODE) SOURCE_CODE,
        WMS_SOURCE_NAME SOURCE_NAME
        FROM IUNI_ORDER_SOURCE
        ORDER BY WMS_SOURCE_CODE) IOS
        ON IOS.SOURCE_CODE = IWSO.ORDER_SOURCE
        <where>
            (IWSO.ORDER_MERGER_TYPE IS NULL OR IWSO.ORDER_MERGER_TYPE = 2)
            <if test="orderType != null">
                IWSO.ORDER_TYPE = #orderType#
            </if>
            <if test="beginDate != null">
                IWSO.SHIPPING_TIME <![CDATA[ >= ]]> to_date(#beginDate#, 'YYYY-MM-DD')
            </if>
            <if test="endDate != null">
                IWSO.SHIPPING_TIME <![CDATA[ < ]]> to_date(#endDate#, 'YYYY-MM-DD')+1
            </if>
        </where>
        ) T1
        <where>
            <if test="orderList != null">
                AND T1."orderList" IN
                <foreach collection="orderList" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        UNION ALL
        SELECT *
        FROM (SELECT SWT.SHIPPING_TIME "time",
        IOS.SOURCE_NAME "orderSource",
        null "orderCode",
        null "orderType",
        null "outerOrderCode",
        null "payNo",
        null "deliveryCode",
        SWTG.UNIT_PRICE "price",
        SWTG.QUANTITY "quantity",
        SWS.SKU_CODE "sku",
        SWS.SKU_NAME "skuName",
        SWS.MATERIAL_CODE "materialCode",
        SWW.WARES_NAME "waresName",
        IOS.SOURCE_CODE "transferList"
        FROM SYN_WMS_TRANSFER SWT
        LEFT JOIN SYN_WMS_TRANSFER_GOODS SWTG
        ON SWT.ID = SWTG.TRANSFER_ID
        LEFT JOIN SYN_WMS_TRANSFER_PARTNER SWTP
        ON SWTP.ID = SWT.TRANSFER_SALE
        LEFT JOIN SYN_WMS_SKU SWS
        ON SWTG.SKU_ID = SWS.ID
        LEFT JOIN SYN_WMS_WARES SWW
        ON SWS.WARES_ID = SWW.ID
        LEFT JOIN
        (
        SELECT DISTINCT (CODE) SOURCE_CODE, NAME SOURCE_NAME
        FROM SYN_WMS_TRANSFER_PARTNER
        <where>
            CODE NOT IN ('88888', '110538')
            AND C_PARENT_ID IS NULL
        </where>
        ORDER BY CODE
        ) IOS ON IOS.SOURCE_CODE = SWTP.CODE
        <where>
            <if test="beginDate != null">
                SWT.SHIPPING_TIME <![CDATA[ >= ]]> to_date(#beginDate#, 'YYYY-MM-DD')
            </if>
            <if test="endDate != null">
                SWT.SHIPPING_TIME <![CDATA[ < ]]> to_date(#endDate#, 'YYYY-MM-DD')+1
            </if>
        </where>
        ) T2
        <where>
            <if test="transferList != null">
                AND T2."transferList" IN
                <foreach collection="transferList" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </sql>

</mapper>