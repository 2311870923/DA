<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="wmsSalesOrder">

    <!-- 销售明细统计报表 -->
    <sql id="selectWmsSalesOrder">
        select IWSO.ORDER_CODE "orderCode",
        IWSO.BATCH_CODE "batchCode",
        IWSO.OUTER_ORDER_CODE "outerOrderCode",
        IOS.WMS_SOURCE_NAME "orderSource",
        IWSO.SHIPPING_TIME "shippingTime",
        IWSO.CONSIGNEE "consignee",
        IWSO.PROVINCE || IWSO.CITY || IWSO.ADDRESS "shippingAddr",
        IWSO.MOBILE "mobile",
        case IWSO.PAYMENT_TYPE
        when 1 then
        '在线支付'
        when 2 then
        '货到付款'
        else
        to_char(IWSO.PAYMENT_TYPE)
        end "payType",
        IWSO.SHIPPING_NAME "shippingName",
        IWSO.SHIPPING_NO "shippingNo",
        IWSO.ORDER_TIME "orderTime",
        IWSO.PAY_NO "payNo",
        IWSO.ORDER_AMOUNT "orderAmount",
        IWSO.PAYABLE_AMOUNT "payAmount",
        IWSO.PAID_AMOUNT "paidAmount",
        case IWSO.INVOICE_ENABLED
        when '1' then
        '是'
        when '0' then
        '否'
        else
        IWSO.INVOICE_ENABLED
        end "invoiceEnabled",
        IWSO.INVOICE_TITLE "invoiceTitle",
        IWSO.INVOICE_AMOUNT "invoiceAmount",
        case IWSO.ORDER_STATUS
        when '1' then
        '已出库'
        when '5' then
        '已签收'
        else
        IWSO.ORDER_STATUS
        end "orderStatus",
        IWSO.WEIGHT "weight",
        IWSOL.OP_TIME "signedTime",
        IWSOG.SKU_NAME "skuName",
        IWSOG.QUANTITY "quantity",
        IWSOG.UNIT_PRICE "unitPrice",
        IWSOG.SUBTOTAL_PRICE "goodsAmount"
        from SYN_WMS_SALES_ORDER IWSO
        left join SYN_WMS_SALES_ORDER_GOODS IWSOG
        on IWSOG.ORDER_ID = IWSO.ID
        left join (SELECT DISTINCT (ORDER_ID), ORDER_STATUS, MAX(OP_TIME) OP_TIME
        FROM SYN_WMS_SALES_ORDER_LOG
        <where>
            ORDER_STATUS = 5
        </where>
        GROUP BY ORDER_ID, ORDER_STATUS) IWSOL
        on IWSOL.ORDER_ID = IWSO.ID
        left join (SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME FROM IUNI_ORDER_SOURCE) IOS
        ON IOS.WMS_SOURCE_CODE = IWSO.ORDER_SOURCE
        <where>
            (IWSO.ORDER_MERGER_TYPE IS NULL OR IWSO.ORDER_MERGER_TYPE = 2)
            AND IWSO.SHIPPING_TIME <![CDATA[ >= ]]> to_date(#beginDate#, 'yyyy-mm-dd')
            AND IWSO.SHIPPING_TIME <![CDATA[ < ]]> to_date(#endDate#, 'yyyy-mm-dd')+1
            AND IWSO.ORDER_STATUS in ('1', '5')
        </where>
        order by IWSO.SHIPPING_TIME, IWSO.ORDER_CODE
    </sql>

    <!-- ========IUNI WMS未开票销售明细报表 ==========-->
    <sql id="selectNoInvoiceSalesDetails">
        select T0.* from (
        select IOS.WMS_SOURCE_NAME "orderSource",
        MAX(IWSC.CREATE_TIME) "stockChangeTime",
        IWSO.ORDER_CODE "orderCode",
        IWSO.OUTER_ORDER_CODE "outerOrderCode",
        IWSO.DELIVERY_CODE "deliveryCode",
        -SUM(IWSC.QUANTITY) "quantity",
        IWSO.INVOICE_AMOUNT "invoiceAmount",
        IWS.SKU_CODE "skuCode",
        IWS.MATERIAL_CODE "materialCode",
        IWS.SKU_NAME "skuName",
        IWW.WARES_NAME "goodsName",
        IWSO.INVOICE_TCODE "invoiceTcode",
        IWSO.INVOICE_CODE "invoiceCode"
        from SYN_WMS_SALES_ORDER IWSO
        LEFT JOIN (SELECT '换货订单-' || IOS2.WMS_SOURCE_NAME "orderSource",
        IWSO4.Order_Code,
        IWSO4.SRC_ORDER_CODE
        FROM SYN_WMS_SALES_ORDER IWSO3
        JOIN (select IWSO2.ORDER_CODE,
        SUBSTR(IWSO2.ORDER_CODE,
        0,
        instr(IWSO2.ORDER_CODE, '-') - 1) SRC_ORDER_CODE
        from SYN_WMS_SALES_ORDER IWSO2
        <where>
            IWSO2.ORDER_SOURCE = '9'
        </where>) IWSO4
        ON IWSO3.ORDER_CODE = IWSO4.SRC_ORDER_CODE
        LEFT JOIN (SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME
        FROM IUNI_ORDER_SOURCE) IOS2
        ON IOS2.WMS_SOURCE_CODE = IWSO3.ORDER_SOURCE) IWSO_H
        ON IWSO.ORDER_CODE = IWSO_H.ORDER_CODE
        left join SYN_WMS_SALES_ORDER_GOODS IWSOG
        on IWSOG.ORDER_ID = IWSO.ID
        left join SYN_WMS_SKU IWS
        on IWS.ID = IWSOG.SKU_ID
        left join SYN_WMS_WARES IWW
        on IWW.ID = IWS.WARES_ID
        left join (select *
        from SYN_WMS_STOCK_CHANGE IWSC
        left join SYN_WMS_STOCK IWST
        on IWST.ID = IWSC.STOCK_ID) IWSC
        on (IWSC.ORIGINAL_CODE = IWSO.ORDER_CODE and IWSC.SKU_ID = IWS.ID)
        LEFT JOIN (SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME
        FROM IUNI_ORDER_SOURCE) IOS
        ON IOS.WMS_SOURCE_CODE = IWSO.ORDER_SOURCE
        <where>
            IWSO.ORDER_STATUS in ('1', '5', '4', '10', '6', '7')
            AND (IWSO.ORDER_MERGER_TYPE IS NULL OR IWSO.ORDER_MERGER_TYPE = 2)
            AND IWSO.INVOICE_ENABLED = '0'
            AND IWSC.BIZ_TYPE in ('102', '103', '104', '107', '201', '203')
            AND IWSC.STOCK_TYPE = '4'
            AND IWSO.ORDER_SOURCE <![CDATA[ <> ]]> '9'
            <if test="beginDate != null">
                AND IWSC.CREATE_TIME <![CDATA[ >= ]]> to_date(#beginDate#,'yyyy-mm-dd')
            </if>
            <if test="endDate != null">
                AND IWSC.CREATE_TIME <![CDATA[ < ]]> to_date(#endDate#,'yyyy-mm-dd')+1
            </if>
        </where>
        GROUP BY IOS.WMS_SOURCE_NAME,
        IWSO.ORDER_CODE,
        IWSO.OUTER_ORDER_CODE,
        IWSO.DELIVERY_CODE,
        IWSO.INVOICE_AMOUNT,
        IWS.SKU_CODE,
        IWS.MATERIAL_CODE,
        IWS.SKU_NAME,
        IWW.WARES_NAME,
        IWSO.INVOICE_TCODE,
        IWSO.INVOICE_CODE,
        IWSC.BIZ_TYPE
        ) T0
        <where>
            <if test="orderSource != null">
                AND T0."orderSource" LIKE '%' || #orderSource# || '%'
            </if>
            <if test="orderCode != null">
                AND T0."orderCode" LIKE '%' || #orderCode# || '%'
            </if>
            <if test="materialCode != null">
                AND T0."materialCode" LIKE '%' || #materialCode# || '%'
            </if>
        </where>
        order by T0."stockChangeTime", T0."orderSource", T0."orderCode"
    </sql>

    <!-- =========收款发货发票金额核对明细报表============= -->
    <sql id="selectWmsPayAmountCheck">
        select * from(
        select IWSC.CREATE_TIME "stockTime",
        IWSO.ORDER_CODE "orderCode",
        IWSO.OUTER_ORDER_CODE "outerOrderCode",
        case
        when IOI.PARENTORDERID is null then
        IWSO.ORDER_CODE
        else
        IOI.PARENTORDERID
        end "parentOrderId",
        IOS.WMS_SOURCE_NAME "orderSource",
        IOI.GOODS_AMOUNT "goodsAmount",
        IOI.SHIPPING_FEE "shippingFee",
        IOI.ALIPAY_NO "paySerialNo",
        case
        when IOI.discount is null then
        0
        else
        IOI.discount
        end "bonus",
        case
        when IWSC.BIZ_TYPE = '201' then
        IOI.ORDER_AMOUNT
        else
        -IOI.ORDER_AMOUNT
        end "orderAmount",
        case
        when IWSC.BIZ_TYPE = '201' then
        IOI.MONEY_PAID
        else
        -IOI.MONEY_PAID
        end "paidAmount",
        IOI.PAY_NAME "payName",
        case
        when IWSC.BIZ_TYPE = '201' then
        IWSO.INVOICE_AMOUNT
        else
        -IWSO.INVOICE_AMOUNT
        end "invoiceAmount",
        0 "deductAmount",
        '' "deductReason"
        from SYN_WMS_SALES_ORDER IWSO
        left join IUNI_ORDER_INFO IOI
        on IOI.ORDER_SN = IWSO.ORDER_CODE
        left join SYN_WMS_STOCK_CHANGE IWSC
        on IWSC.ORIGINAL_CODE = IWSO.ORDER_CODE
        LEFT JOIN IUNI_RETURNGOODS_INFO IRI
        ON IRI.ORDER_SN = IWSO.ORDER_CODE
        LEFT JOIN (SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME
        FROM IUNI_ORDER_SOURCE) IOS
        ON IOS.WMS_SOURCE_CODE = IWSO.ORDER_SOURCE
        <where>
            IWSO.ORDER_SOURCE in ('3', '4', '6', '8', '11')
            AND IWSO.ORDER_STATUS in ('1', '5', '6', '4', '7', '10')
            AND (IWSO.ORDER_MERGER_TYPE IS NULL OR IWSO.ORDER_MERGER_TYPE = 2)
            AND IWSC.BIZ_TYPE in ('103', '201')
            AND IWSC.STOCK_TYPE = '4'
            <if test="beginDate != null">
                AND IWSC.CREATE_TIME <![CDATA[ >= ]]> to_date(#beginDate#,'yyyy-mm-dd')
            </if>
            <if test="endDate != null">
                AND IWSC.CREATE_TIME <![CDATA[ < ]]> to_date(#endDate#,'yyyy-mm-dd')+1
            </if>
        </where>
        GROUP BY IWSC.CREATE_TIME,
        IWSO.ORDER_CODE,
        IWSO.OUTER_ORDER_CODE,
        IOI.PARENTORDERID,
        IOS.WMS_SOURCE_NAME,
        IOI.GOODS_AMOUNT,
        IOI.GOODS_AMOUNT,
        IOI.SHIPPING_FEE,
        IOI.ALIPAY_NO,
        IOI.DISCOUNT,
        IOI.ORDER_AMOUNT,
        IOI.MONEY_PAID,
        IOI.PAY_NAME,
        IWSO.INVOICE_AMOUNT,
        IWSC.BIZ_TYPE,
        IRI.DEBIT_AMOUNT
        UNION ALL
        select IWSC.CREATE_TIME "stockTime",
        IWSO.ORDER_CODE "orderCode",
        IWSO.OUTER_ORDER_CODE "outerOrderCode",
        case
        when IOI.PARENTORDERID is null then
        IWSO.ORDER_CODE
        else
        IOI.PARENTORDERID
        end "parentOrderId",
        IOS.WMS_SOURCE_NAME "orderSource",
        IOI.GOODS_AMOUNT "goodsAmount",
        IOI.SHIPPING_FEE "shippingFee",
        IOI.ALIPAY_NO "paySerialNo",
        case
        when IOI.discount is null then
        0
        else
        IOI.discount
        end "bonus",
        case
        when IWSC.BIZ_TYPE = '201' then
        IOI.ORDER_AMOUNT
        else
        -IOI.ORDER_AMOUNT
        end "orderAmount",
        case
        when IWSC.BIZ_TYPE = '201' then
        IOI.MONEY_PAID
        else
        -IOI.MONEY_PAID
        end "paidAmount",
        IOI.PAY_NAME "payName",
        case
        when IWSC.BIZ_TYPE = '201' then
        IWSO.INVOICE_AMOUNT
        else
        -IWSO.INVOICE_AMOUNT
        end "invoiceAmount",
        IRI.DEBIT_AMOUNT "deductAmount",
        KOUKUAN.REASON "deductReason"
        from SYN_WMS_SALES_ORDER IWSO
        left join IUNI_ORDER_INFO IOI
        on IOI.ORDER_SN = IWSO.ORDER_CODE
        left join SYN_WMS_STOCK_CHANGE IWSC
        on IWSC.ORIGINAL_CODE = IWSO.ORDER_CODE
        LEFT JOIN IUNI_RETURNGOODS_INFO IRI
        ON IRI.ORDER_SN = IWSO.ORDER_CODE
        LEFT JOIN (SELECT ORDER_SN,
        MAX(REPLACE(TRIM(SYS_CONNECT_BY_PATH(REMARK,'{]')),'{]','')) REASON
        FROM (SELECT T1.ORDER_SN,
        T1.REMARK,
        ROW_NUMBER() OVER(PARTITION BY ORDER_SN ORDER BY ORDER_SN) RN
        FROM IUNI_RETURNGOODS_ITEM T1) T
        START WITH RN = 1
        CONNECT BY PRIOR RN + 1 = RN
        AND PRIOR ORDER_SN = ORDER_SN
        GROUP BY ORDER_SN) KOUKUAN
        ON KOUKUAN.ORDER_SN = IWSO.ORDER_CODE
        LEFT JOIN (SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME
        FROM IUNI_ORDER_SOURCE) IOS
        ON IOS.WMS_SOURCE_CODE = IWSO.ORDER_SOURCE
        <where>
            IWSO.ORDER_SOURCE in ('3', '4', '6', '8', '11')
            AND IWSO.ORDER_STATUS in ('1', '5', '6', '4', '7', '10')
            AND (IWSO.ORDER_MERGER_TYPE IS NULL OR IWSO.ORDER_MERGER_TYPE = 2)
            AND IWSC.BIZ_TYPE in ('102')
            AND IWSC.STOCK_TYPE = '4'
            <if test="beginDate != null">
                AND IWSC.CREATE_TIME <![CDATA[ >= ]]> to_date(#beginDate#,'yyyy-mm-dd')
            </if>
            <if test="endDate != null">
                AND IWSC.CREATE_TIME <![CDATA[ < ]]> to_date(#endDate#,'yyyy-mm-dd')+1
            </if>
        </where>
        GROUP BY IWSC.CREATE_TIME,
        IWSO.ORDER_CODE,
        IWSO.OUTER_ORDER_CODE,
        IOI.PARENTORDERID,
        IOS.WMS_SOURCE_NAME,
        IOI.GOODS_AMOUNT,
        IOI.GOODS_AMOUNT,
        IOI.SHIPPING_FEE,
        IOI.ALIPAY_NO,
        IOI.DISCOUNT,
        IOI.ORDER_AMOUNT,
        IOI.MONEY_PAID,
        IOI.PAY_NAME,
        IWSO.INVOICE_AMOUNT,
        IWSC.BIZ_TYPE,
        IRI.DEBIT_AMOUNT,
        KOUKUAN.REASON
        )TMP
        <where>
            <if test="orderCode != null">
                AND TMP."orderCode" like '%' || #orderCode# || '%'
            </if>
            <if test="parentOrderId != null">
                AND TMP."parentOrderId" like '%' || #parentOrderId# || '%'
            </if>
            <if test="orderSource != null">
                AND TMP."orderSource" like '%' || #orderSource# || '%'
            </if>
        </where>
        order by TMP."stockTime", TMP."orderCode", TMP."orderSource"
    </sql>

    <!-- 销售出库明细报表查询SQL,包括销售和调拔的出库与退货，不包括换货数据 -->
    <sql id="selectStockMovDetail">
        SELECT * FROM (
        SELECT IOS.WMS_SOURCE_NAME "orderSource",
        IOI.PAY_NAME "payName",
        CASE WHEN SWW.WAREHOUSE_CODE IS NULL THEN '0769' ELSE SWW.WAREHOUSE_CODE END "warehouseCode",
        CASE WHEN SWW.WAREHOUSE_NAME IS NULL THEN 'DG总仓' ELSE SWW.WAREHOUSE_NAME END "warehouseName",
        IWSC.CREATE_TIME "stockChangeTime",
        IWSO.ORDER_CODE "orderCode",
        IWSO.OUTER_ORDER_CODE "outerOrderCode",
        IWSO.DELIVERY_CODE "deliveryCode",
        -IWSC.QUANTITY "quantity",
        CASE
        WHEN IWSO.INVOICE_TCODE IS NOT NULL AND
        IWSO.INVOICE_CODE IS NOT NULL THEN
        IWSO.INVOICE_AMOUNT
        ELSE
        0
        END "invoiceAmount",
        IWS.SKU_CODE "skuCode",
        IWS.MATERIAL_CODE "materialCode",
        IWS.SKU_NAME "skuName",
        IWW.WARES_NAME "goodsName",
        IWSO.INVOICE_TCODE "invoiceTcode",
        IWSO.INVOICE_CODE "invoiceCode" ,
        CASE WHEN IWSO.LOGISTICS_COST IS NULL THEN 0 ELSE IWSO.LOGISTICS_COST END "logisticsCost",
        CASE SUBSTR(IOI.TAG,2,1) WHEN '1' THEN '是' ELSE '否' END "isScalper"
        FROM SYN_WMS_STOCK_CHANGE IWSC
        LEFT JOIN SYN_WMS_STOCK IWSS
        ON IWSC.STOCK_ID = IWSS.ID
        LEFT JOIN SYN_WMS_WAREHOUSE IWWH
        ON IWSS.WAREHOUSE_ID = IWWH.ID
        LEFT JOIN SYN_WMS_SALES_ORDER IWSO
        ON IWSC.ORIGINAL_CODE = IWSO.ORDER_CODE
        AND IWSO.ORDER_SOURCE <![CDATA[ <> ]]> '9'
        LEFT JOIN SYN_WMS_WAREHOUSE SWW
        ON SWW.WAREHOUSE_CODE = IWSO.WAREHOUSE
        LEFT JOIN IUNI_ORDER_INFO IOI
        ON IWSO.ORDER_CODE = IOI.ORDER_SN
        LEFT JOIN SYN_WMS_SKU IWS
        ON IWSS.SKU_ID = IWS.ID
        LEFT JOIN SYN_WMS_WARES IWW
        ON IWS.WARES_ID = IWW.ID
        LEFT JOIN SYN_WMS_WARES_CATEGORY IWWC
        ON IWW.CAT_ID = IWWC.ID
        LEFT JOIN (SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME
        FROM IUNI_ORDER_SOURCE) IOS
        ON IOS.WMS_SOURCE_CODE = IWSO.ORDER_SOURCE
        <where>
            IWSC.BIZ_TYPE IN ('201', '103')
            AND IWSC.STOCK_TYPE = '4'
            <if test="beginDate != null">
                AND IWSC.CREATE_TIME <![CDATA[ >= ]]> TO_DATE(#beginDate#, 'YYYY-MM-DD')
            </if>
            <if test="endDate != null">
                AND IWSC.CREATE_TIME <![CDATA[ < ]]> TO_DATE(#endDate#, 'YYYY-MM-DD') + 1
            </if>
        </where>
        UNION ALL
        SELECT IOS.WMS_SOURCE_NAME "orderSource",
        IOI.PAY_NAME "payName",
        '0769' "warehouseCode",
        'DG总仓' "warehouseName",
        MAX(IWSC.CREATE_TIME) "stockChangeTime",
        IWSO.ORDER_CODE "orderCode",
        IWSO.OUTER_ORDER_CODE "outerOrderCode",
        IWSO.DELIVERY_CODE "deliveryCode",
        -SUM(IWSC.QUANTITY) "quantity",
        CASE
        WHEN IWSO.INVOICE_TCODE IS NOT NULL AND
        IWSO.INVOICE_CODE IS NOT NULL THEN
        IWSO.INVOICE_AMOUNT
        ELSE
        0
        END "invoiceAmount",
        IWS.SKU_CODE "skuCode",
        IWS.MATERIAL_CODE "materialCode",
        IWS.SKU_NAME "skuName",
        IWW.WARES_NAME "goodsName",
        IWSO.INVOICE_TCODE "invoiceTcode",
        IWSO.INVOICE_CODE "invoiceCode",
        CASE WHEN IWSO.LOGISTICS_COST IS NULL THEN 0 ELSE IWSO.LOGISTICS_COST END "logisticsCost",
        CASE SUBSTR(IOI.TAG,2,1) WHEN '1' THEN '是' ELSE '否' END "isScalper"
        FROM SYN_WMS_STOCK_CHANGE IWSC
        LEFT JOIN SYN_WMS_SALES_ORDER IWSO
        ON IWSC.ORIGINAL_CODE = IWSO.ORDER_CODE
        AND IWSO.ORDER_SOURCE <![CDATA[ <> ]]> '9'
        LEFT JOIN IUNI_ORDER_INFO IOI
        ON IWSO.ORDER_CODE = IOI.ORDER_SN
        LEFT JOIN SYN_WMS_STOCK IWSS
        ON IWSC.STOCK_ID = IWSS.ID
        LEFT JOIN SYN_WMS_WAREHOUSE IWWH
        ON IWSS.WAREHOUSE_ID = IWWH.ID
        LEFT JOIN SYN_WMS_SKU IWS
        ON IWSS.SKU_ID = IWS.ID
        LEFT JOIN SYN_WMS_WARES IWW
        ON IWS.WARES_ID = IWW.ID
        LEFT JOIN SYN_WMS_WARES_CATEGORY IWWC
        ON IWW.CAT_ID = IWWC.ID
        LEFT JOIN (SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME
        FROM IUNI_ORDER_SOURCE) IOS
        ON IOS.WMS_SOURCE_CODE = IWSO.ORDER_SOURCE
        <where>
            IWSC.BIZ_TYPE IN ('102')
            <if test="beginDate != null">
                AND IWSC.CREATE_TIME <![CDATA[ >= ]]> TO_DATE(#beginDate#, 'YYYY-MM-DD')
            </if>
            <if test="beginDate != null">
                AND IWSC.CREATE_TIME <![CDATA[ < ]]> TO_DATE(#endDate#, 'YYYY-MM-DD') + 1
            </if>
            AND IWSC.STOCK_TYPE = 4
            AND EXISTS
            (SELECT 1
            FROM SYN_WMS_BACK IWB
            <where>
                IWB.ORDER_CODE = IWSC.ORIGINAL_CODE
            </where>)
        </where>
        GROUP BY
        IOS.WMS_SOURCE_NAME,
        IOI.PAY_NAME,
        IWSO.ORDER_CODE,
        IWSO.OUTER_ORDER_CODE,
        IWSO.DELIVERY_CODE,
        IWSO.INVOICE_AMOUNT,
        IWS.SKU_CODE,
        IWS.MATERIAL_CODE,
        IWS.SKU_NAME,
        IWW.WARES_NAME,
        IWSO.INVOICE_TCODE,
        IWSO.INVOICE_CODE,
        IWSO.LOGISTICS_COST,
        IOI.TAG
        UNION ALL
        SELECT IWLO.COMPANY_NAME "orderSource",
        '' "payName",
        '0769' "warehouseCode",
        'DG总仓' "warehouseName",
        IWT.SHIPPING_TIME "stockChangeTime",
        IWT.ID "orderCode",
        '' "outerOrderCode",
        '' "deliveryCode",
        IWTG.QUANTITY "quantity",
        0 "invoiceAmount",
        IWS.SKU_CODE "skuCode",
        IWS.MATERIAL_CODE "materialCode",
        IWS.SKU_NAME "skuName",
        IWW.WARES_NAME "goodsName",
        '' "invoiceTcode",
        '' "invoiceCode",
        0 "logisticsCost",
        '否' "isScalper"
        FROM SYN_WMS_TRANSFER IWT
        LEFT JOIN SYN_WMS_TRANSFER_GOODS IWTG
        ON IWTG.TRANSFER_ID = IWT.ID
        LEFT JOIN SYN_WMS_LARGE_ORDER IWLO
        ON IWLO.ORDER_CODE = IWT.ORDER_CODE
        LEFT JOIN SYN_WMS_SKU IWS
        ON IWTG.SKU_ID = IWS.ID
        LEFT JOIN SYN_WMS_WARES IWW
        ON IWS.WARES_ID = IWW.ID
        LEFT JOIN SYN_WMS_WARES_CATEGORY IWWC
        ON IWW.CAT_ID = IWWC.ID
        LEFT JOIN SYN_WMS_WAREHOUSE IWWH
        ON IWT.WAREHOUSE_ID = IWWH.ID
        <where>
            IWT.STATUS = 2
            AND IWT.BILL_TYPE <![CDATA[ <> ]]> '1'
            AND IWT.BILL_TYPE <![CDATA[ <> ]]> '3'
            <if test="beginDate != null">
                AND IWT.SHIPPING_TIME <![CDATA[ >= ]]> TO_DATE(#beginDate#, 'YYYY-MM-DD')
            </if>
            <if test="endDate != null">
                AND IWT.SHIPPING_TIME <![CDATA[ < ]]> TO_DATE(#endDate#, 'YYYY-MM-DD') + 1
            </if>
        </where>
        UNION ALL
        SELECT IWR.TRANSFER_PARTNER_NAME "orderSource",
        '' "payName",
        '0769' "warehouseCode",
        'DG总仓' "warehouseName",
        IWR.HANDLED_TIME "stockChangeTime",
        IWR.RECEIVE_CODE "orderCode",
        IWR.ORIGINAL_CODE "outerOrderCode",
        '' "deliveryCode",
        -IWRG.QUANTITY "quantity",
        0 "invoiceAmount",
        IWS.SKU_CODE "skuCode",
        IWS.MATERIAL_CODE "materialCode",
        IWS.SKU_NAME "skuName",
        IWW.WARES_NAME "goodsName",
        '' "invoiceTcode",
        '' "invoiceCode",
        0 "logisticsCost"，
        '否' "isScalper"
        FROM SYN_WMS_RECEIVE IWR
        LEFT JOIN SYN_WMS_TRANSFER_PARTNER IWWP
        ON IWR.TRANSFER_PARTNER_ID = IWWP.ID
        LEFT JOIN SYN_WMS_RECEIVE_GOODS IWRG
        ON IWRG.RECEIVE_ID = IWR.ID
        LEFT JOIN SYN_WMS_SKU IWS
        ON IWRG.SKU_ID = IWS.ID
        LEFT JOIN SYN_WMS_WARES IWW
        ON IWS.WARES_ID = IWW.ID
        LEFT JOIN SYN_WMS_WARES_CATEGORY IWWC
        ON IWW.CAT_ID = IWWC.ID
        LEFT JOIN SYN_WMS_WAREHOUSE IWWH
        ON IWR.WAREHOUSE_ID = IWWH.ID
        <where>
            IWR.RECEIVE_TYPE IN ('104')
            AND IWR.HANDLING_STATUS = 1
            AND (IWRG.USE_FLAG IS NULL OR IWRG.USE_FLAG <![CDATA[ <> ]]> '0')
            AND IWR.TRANS_BACK_TYPE <![CDATA[ <> ]]> 1
            <if test="beginDate != null">
                AND IWR.HANDLED_TIME <![CDATA[ >= ]]> TO_DATE(#beginDate#, 'YYYY-MM-DD')
            </if>
            <if test="endDate != null">
                AND IWR.HANDLED_TIME <![CDATA[ < ]]> TO_DATE(#endDate#, 'YYYY-MM-DD') + 1
            </if>
        </where>
        )TMP
        <where>
            TMP."quantity" <![CDATA[ <> ]]> 0
            <if test="orderSource != null">
                AND TMP."orderSource" LIKE '%' || #orderSource# || '%'
            </if>
            <if test="orderCode != null">
                AND
                (
                TMP."orderCode" LIKE '%' || #orderCode# || '%' OR TMP."outerOrderCode" LIKE '%' || #orderCode# ||'%'
                )
            </if>
            <if test="materialCode != null">
                AND TMP."materialCode" LIKE '%' || #materialCode# || '%'
            </if>
            <if test="warehouseCode != null">
                AND TMP."warehouseCode" = #warehouseCode#
            </if>
        </where>
        ORDER BY TMP."stockChangeTime", TMP."orderCode", TMP."skuCode"
    </sql>

    <sql id="selectRebatesDetail">
        SELECT * FROM (
        SELECT IOS.WMS_SOURCE_NAME "orderSource",
        UNIX_TO_ORACLE(IOI.ADD_TIME) "addTime",
        IWSO.ORDER_CODE "orderCode",
        IWSO.OUTER_ORDER_CODE "outerOrderCode",
        IWSO.DELIVERY_CODE "deliveryCode",
        -IWSC.QUANTITY "quantity",
        CASE
        WHEN IWSO.INVOICE_TCODE IS NOT NULL AND
        IWSO.INVOICE_CODE IS NOT NULL THEN
        IWSO.INVOICE_AMOUNT
        ELSE
        0
        END "invoiceAmount",
        IWS.SKU_CODE "skuCode",
        IWS.MATERIAL_CODE "materialCode",
        IWS.SKU_NAME "skuName",
        IWW.WARES_NAME "goodsName",
        IWSO.INVOICE_TCODE "invoiceTcode",
        IWSO.INVOICE_CODE "invoiceCode",
        CASE
        WHEN IWSO.LOGISTICS_COST IS NULL THEN
        0
        ELSE
        IWSO.LOGISTICS_COST
        END "logisticsCost",
        IOG.REBATE_RATIO "rebateRatio",
        IOG.REBATE_CONFIRM_AMOUNT "rebateConfirmAmount",
        IOG.REBATE_STATUS "rebateStatus",
        IU.USER_NAME "rebateUserName",
        IU.MAIL "rebateMail",
        IU.PHONENUM "rebatePhone"
        FROM SYN_WMS_STOCK_CHANGE IWSC
        LEFT JOIN SYN_WMS_STOCK IWSS
        ON IWSC.STOCK_ID = IWSS.ID
        LEFT JOIN SYN_WMS_WAREHOUSE IWWH
        ON IWSS.WAREHOUSE_ID = IWWH.ID
        LEFT JOIN SYN_WMS_SALES_ORDER IWSO
        ON IWSC.ORIGINAL_CODE = IWSO.ORDER_CODE
        AND IWSO.ORDER_SOURCE <![CDATA[ <> ]]> '9'
        LEFT JOIN IUNI_ORDER_INFO IOI
        ON IWSO.ORDER_CODE = IOI.ORDER_SN
        LEFT JOIN SYN_WMS_SKU IWS
        ON IWSS.SKU_ID = IWS.ID
        LEFT JOIN SYN_WMS_WARES IWW
        ON IWS.WARES_ID = IWW.ID
        LEFT JOIN SYN_WMS_WARES_CATEGORY IWWC
        ON IWW.CAT_ID = IWWC.ID
        LEFT JOIN IUNI_ORDER_GOODS IOG
        ON IOI.ORDER_SN = IOG.ORDER_ID
        AND IWS.SKU_CODE = IOG.SKU
        LEFT JOIN IUNI_USER IU
        ON IOG.REBATE_USERID = IU.ID
        LEFT JOIN (SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME FROM IUNI_ORDER_SOURCE) IOS
        ON IOS.WMS_SOURCE_CODE = IWSO.ORDER_SOURCE
        <where>
            IWSC.STOCK_TYPE = '4'
            AND IOG.REBATE_STATUS IS NOT NULL
            <if test="beginDate != null">
                AND UNIX_TO_ORACLE(IOI.ADD_TIME) <![CDATA[ >= ]]> TO_DATE(#beginDate#, 'YYYY-MM-DD')
            </if>
            <if test="endDate != null">
                AND UNIX_TO_ORACLE(IOI.ADD_TIME) <![CDATA[ < ]]> TO_DATE(#endDate#, 'YYYY-MM-DD') + 1
            </if>
        </where>
        )TMP
        <where>
            TMP."quantity" <![CDATA[ <> ]]> 0
            <if test="orderSource != null">
                AND TMP."orderSource" LIKE '%' || #orderSource# || '%'
            </if>
            <if test="orderCode != null">
                AND
                (
                TMP."orderCode" LIKE '%' || #orderCode# || '%' OR TMP."outerOrderCode" LIKE '%' || #orderCode# || '%'
                )
            </if>
            <if test="materialCode != null">
                AND TMP."materialCode" LIKE '%' || #materialCode# || '%'
            </if>
            <if test="rebateUserName != null">
                AND TMP."rebateUserName" LIKE '%' || #rebateUserName# || '%'
            </if>
            <if test="rebateStatus != null">
                AND TMP."rebateStatus" LIKE '%' || #rebateStatus# || '%'
            </if>
            <if test="rebateMail != null">
                AND TMP."rebateMail" LIKE '%' || #rebateMail# || '%'
            </if>
            <if test="rebatePhone != null">
                AND TMP."rebatePhone" LIKE '%' || #rebatePhone# || '%'
            </if>
        </where>
        ORDER BY TMP."addTime", TMP."orderCode", TMP."skuCode"
    </sql>

</mapper>