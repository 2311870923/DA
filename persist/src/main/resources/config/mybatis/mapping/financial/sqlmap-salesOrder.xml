<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.iuni.data.persist.mapper.financial.SalesOrderMapper">

    <!-- 销售明细结果 -->
    <resultMap id="salesOrderDetailsResult" type="com.iuni.data.persist.model.financial.SalesOrderDetailsTableDto">
        <result property="shippingTime" column="shippingTime"/>
        <result property="orderSource" column="orderSource"/>
        <result property="batchCode" column="batchCode"/>
        <result property="orderCode" column="orderCode"/>
        <result property="outerOrderCode" column="outerOrderCode"/>
        <result property="consignee" column="consignee"/>
        <result property="shippingAddress" column="shippingAddress"/>
        <result property="mobile" column="mobile"/>
        <result property="payType" column="payType"/>
        <result property="shippingName" column="shippingName"/>
        <result property="shippingNo" column="shippingNo"/>
        <result property="orderTime" column="orderTime"/>
        <result property="payNo" column="payNo"/>
        <result property="orderAmount" column="orderAmount"/>
        <result property="payAmount" column="payAmount"/>
        <result property="paidAmount" column="paidAmount"/>
        <result property="invoiceEnabled" column="invoiceEnabled"/>
        <result property="invoiceTitle" column="invoiceTitle"/>
        <result property="invoiceAmount" column="invoiceAmount"/>
        <result property="orderStatus" column="orderStatus"/>
        <result property="signedTime" column="signedTime"/>
        <result property="name" column="name"/>
        <result property="quantity" column="quantity"/>
        <result property="unitPrice" column="unitPrice"/>
        <result property="goodsAmount" column="goodsAmount"/>
        <result property="weight" column="weight"/>
    </resultMap>
    <!-- 销售明细统计报表 -->
    <select id="selectSalesOrderDetails" parameterType="com.iuni.data.persist.model.financial.SalesOrderDetailsQueryDto"
            resultMap="salesOrderDetailsResult">
        select IWSO.ORDER_CODE "orderCode",
        IWSO.BATCH_CODE "batchCode",
        IWSO.OUTER_ORDER_CODE "outerOrderCode",
        IOS.WMS_SOURCE_NAME "orderSource",
        IWSO.SHIPPING_TIME "shippingTime",
        IWSO.CONSIGNEE "consignee",
        IWSO.PROVINCE || IWSO.CITY || IWSO.ADDRESS "shippingAddress",
        IWSO.MOBILE "mobile",
        case IWSO.PAYMENT_TYPE
        when 1 then
        '在线支付'
        when 2 then
        '货到付款'
        else
        to_char(IWSO.PAYMENT_TYPE)
        end "payType",
        IWSO.SHIPPING_NAME "shippingName",
        IWSO.SHIPPING_NO "shippingNo",
        IWSO.ORDER_TIME "orderTime",
        IWSO.PAY_NO "payNo",
        IWSO.ORDER_AMOUNT "orderAmount",
        IWSO.PAYABLE_AMOUNT "payAmount",
        IWSO.PAID_AMOUNT "paidAmount",
        case IWSO.INVOICE_ENABLED
        when '1' then
        '是'
        when '0' then
        '否'
        else
        IWSO.INVOICE_ENABLED
        end "invoiceEnabled",
        IWSO.INVOICE_TITLE "invoiceTitle",
        IWSO.INVOICE_AMOUNT "invoiceAmount",
        case IWSO.ORDER_STATUS
        when '1' then
        '已出库'
        when '5' then
        '已签收'
        else
        IWSO.ORDER_STATUS
        end "orderStatus",
        IWSO.WEIGHT "weight",
        IWSOL.OP_TIME "signedTime",
        IWSOG.SKU_NAME "name",
        IWSOG.QUANTITY "quantity",
        IWSOG.UNIT_PRICE "unitPrice",
        IWSOG.SUBTOTAL_PRICE "goodsAmount"
        from SYN_WMS_SALES_ORDER IWSO
        left join SYN_WMS_SALES_ORDER_GOODS IWSOG
        on IWSOG.ORDER_ID = IWSO.ID
        left join (SELECT DISTINCT (ORDER_ID), ORDER_STATUS, MAX(OP_TIME) OP_TIME
        FROM SYN_WMS_SALES_ORDER_LOG
        <where>
            ORDER_STATUS = 5
        </where>
        GROUP BY ORDER_ID, ORDER_STATUS) IWSOL
        on IWSOL.ORDER_ID = IWSO.ID
        left join (SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME FROM IUNI_ORDER_SOURCE) IOS
        ON IOS.WMS_SOURCE_CODE = IWSO.ORDER_SOURCE
        <where>
            (IWSO.ORDER_MERGER_TYPE IS NULL OR IWSO.ORDER_MERGER_TYPE = 2)
            AND IWSO.SHIPPING_TIME <![CDATA[ >= ]]> to_date(#{startDateStr}, 'yyyy/mm/dd')
            AND IWSO.SHIPPING_TIME <![CDATA[ < ]]> to_date(#{endDateStr}, 'yyyy/mm/dd')+1
            AND IWSO.ORDER_STATUS in ('1', '5')
        </where>
        order by IWSO.SHIPPING_TIME, IWSO.ORDER_CODE
    </select>

    <!-- 未开票销售明细结果 -->
    <resultMap id="noInvoiceSalesDetails" type="com.iuni.data.persist.model.financial.NoInvoiceSalesDetailsTableDto">
        <result property="orderSource" column="orderSource"/>
        <result property="stockChangeTime" column="stockChangeTime"/>
        <result property="orderCode" column="orderCode"/>
        <result property="outerOrderCode" column="outerOrderCode"/>
        <result property="materialCode" column="materialCode"/>
        <result property="name" column="name"/>
        <result property="quantity" column="quantity"/>
        <result property="invoiceAmount" column="invoiceAmount"/>
    </resultMap>
    <!-- =======未开票销售明细报表 ==========-->
    <select id="selectNoInvoiceSalesDetails"
            parameterType="com.iuni.data.persist.model.financial.NoInvoiceSalesDetailsQueryDto"
            resultMap="noInvoiceSalesDetails">
        select IOS.WMS_SOURCE_NAME "orderSource",
        MAX(IWSC.CREATE_TIME) "stockChangeTime",
        IWSO.ORDER_CODE "orderCode",
        IWSO.OUTER_ORDER_CODE "outerOrderCode",
        IWSO.DELIVERY_CODE "deliveryCode",
        -SUM(IWSC.QUANTITY) "quantity",
        IWSO.INVOICE_AMOUNT "invoiceAmount",
        IWS.SKU_CODE "code",
        IWS.MATERIAL_CODE "materialCode",
        IWS.SKU_NAME "name",
        IWW.WARES_NAME "goodsName",
        IWSO.INVOICE_TCODE "invoiceTcode",
        IWSO.INVOICE_CODE "invoiceCode"
        from SYN_WMS_SALES_ORDER IWSO
        LEFT JOIN
        (
        SELECT '换货订单-' || IOS2.WMS_SOURCE_NAME "orderSource",
        IWSO4.Order_Code,
        IWSO4.SRC_ORDER_CODE
        FROM SYN_WMS_SALES_ORDER IWSO3
        JOIN (select IWSO2.ORDER_CODE,
        SUBSTR(IWSO2.ORDER_CODE,
        0,
        instr(IWSO2.ORDER_CODE, '-') - 1) SRC_ORDER_CODE
        from SYN_WMS_SALES_ORDER IWSO2
        <where>
            IWSO2.ORDER_SOURCE = '9'
        </where>) IWSO4
        ON IWSO3.ORDER_CODE = IWSO4.SRC_ORDER_CODE
        LEFT JOIN
        (
        SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME
        FROM IUNI_ORDER_SOURCE
        ) IOS2
        ON IOS2.WMS_SOURCE_CODE = IWSO3.ORDER_SOURCE
        ) IWSO_H
        ON IWSO.ORDER_CODE = IWSO_H.ORDER_CODE
        left join SYN_WMS_SALES_ORDER_GOODS IWSOG
        on IWSOG.ORDER_ID = IWSO.ID
        left join SYN_WMS_SKU IWS
        on IWS.ID = IWSOG.SKU_ID
        left join SYN_WMS_WARES IWW
        on IWW.ID = IWS.WARES_ID
        left join
        (
        select *
        from SYN_WMS_STOCK_CHANGE IWSC
        left join SYN_WMS_STOCK IWST
        on IWST.ID = IWSC.STOCK_ID
        ) IWSC
        on (IWSC.ORIGINAL_CODE = IWSO.ORDER_CODE and IWSC.SKU_ID = IWS.ID)
        LEFT JOIN
        (
        SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME
        FROM IUNI_ORDER_SOURCE
        ) IOS
        ON IOS.WMS_SOURCE_CODE = IWSO.ORDER_SOURCE
        <where>
            IWSO.ORDER_STATUS in ('1', '5', '4', '10', '6', '7')
            AND (IWSO.ORDER_MERGER_TYPE IS NULL OR IWSO.ORDER_MERGER_TYPE = 2)
            AND IWSO.INVOICE_ENABLED = '0'
            AND IWSC.BIZ_TYPE in ('102', '103', '104', '107', '201', '203')
            AND IWSC.STOCK_TYPE = '4'
            AND IWSO.ORDER_SOURCE <![CDATA[ <> ]]> '9'
            <if test="startDateStr != null">
                AND IWSC.CREATE_TIME <![CDATA[ >= ]]> to_date(#{startDateStr},'yyyy/mm/dd')
            </if>
            <if test="endDateStr != null">
                AND IWSC.CREATE_TIME <![CDATA[ < ]]> to_date(#{endDateStr},'yyyy/mm/dd')+1
            </if>
        </where>
        GROUP BY IOS.WMS_SOURCE_NAME,
        IWSO.ORDER_CODE,
        IWSO.OUTER_ORDER_CODE,
        IWSO.DELIVERY_CODE,
        IWSO.INVOICE_AMOUNT,
        IWS.SKU_CODE,
        IWS.MATERIAL_CODE,
        IWS.SKU_NAME,
        IWW.WARES_NAME,
        IWSO.INVOICE_TCODE,
        IWSO.INVOICE_CODE,
        IWSC.BIZ_TYPE
    </select>

    <!-- 收款发货发票金额结果 -->
    <resultMap id="payAmountCheckResult" type="com.iuni.data.persist.model.financial.PayAmountCheckDetailsTableDto">
        <result property="stockTime" column="stockTime"/>
        <result property="orderCode" column="orderCode"/>
        <result property="parentOrderId" column="parentOrderId"/>
        <result property="outerOrderCode" column="outerOrderCode"/>
        <result property="orderSource" column="orderSource"/>
        <result property="goodsAmount" column="goodsAmount"/>
        <result property="bonus" column="bonus"/>
        <result property="shippingFee" column="shippingFee"/>
        <result property="orderAmount" column="orderAmount"/>
        <result property="paySerialNo" column="paySerialNo"/>
        <result property="paidAmount" column="paidAmount"/>
        <result property="payName" column="payName"/>
        <result property="invoiceAmount" column="invoiceAmount"/>
        <result property="deductAmount" column="deductAmount"/>
        <result property="deductReason" column="deductReason"/>
    </resultMap>
    <!-- =========收款发货发票金额核对明细报表============= -->
    <select id="selectPayAmountCheck"
            parameterType="com.iuni.data.persist.model.financial.PayAmountCheckDetailsQueryDto"
            resultMap="payAmountCheckResult">
        select IWSC.CREATE_TIME "stockTime",
        IWSO.ORDER_CODE "orderCode",
        IWSO.OUTER_ORDER_CODE "outerOrderCode",
        case
        when IOI.PARENTORDERID is null then
        IWSO.ORDER_CODE
        else
        IOI.PARENTORDERID
        end "parentOrderId",
        IOS.WMS_SOURCE_NAME "orderSource",
        IOI.GOODS_AMOUNT "goodsAmount",
        IOI.SHIPPING_FEE "shippingFee",
        IOI.ALIPAY_NO "paySerialNo",
        case
        when IOI.discount is null then
        0
        else
        IOI.discount
        end "bonus",
        case
        when IWSC.BIZ_TYPE = '201' then
        IOI.ORDER_AMOUNT
        else
        -IOI.ORDER_AMOUNT
        end "orderAmount",
        case
        when IWSC.BIZ_TYPE = '201' then
        IOI.MONEY_PAID
        else
        -IOI.MONEY_PAID
        end "paidAmount",
        IOI.PAY_NAME "payName",
        case
        when IWSC.BIZ_TYPE = '201' then
        IWSO.INVOICE_AMOUNT
        else
        -IWSO.INVOICE_AMOUNT
        end "invoiceAmount",
        0 "deductAmount",
        '' "deductReason"
        from SYN_WMS_SALES_ORDER IWSO
        left join IUNI_ORDER_INFO IOI
        on IOI.ORDER_SN = IWSO.ORDER_CODE
        left join SYN_WMS_STOCK_CHANGE IWSC
        on IWSC.ORIGINAL_CODE = IWSO.ORDER_CODE
        LEFT JOIN IUNI_RETURNGOODS_INFO IRI
        ON IRI.ORDER_SN = IWSO.ORDER_CODE
        LEFT JOIN (SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME
        FROM IUNI_ORDER_SOURCE) IOS
        ON IOS.WMS_SOURCE_CODE = IWSO.ORDER_SOURCE
        <where>
            IWSO.ORDER_SOURCE in ('3', '4', '6', '8', '11')
            AND IWSO.ORDER_STATUS in ('1', '5', '6', '4', '7', '10')
            AND (IWSO.ORDER_MERGER_TYPE IS NULL OR IWSO.ORDER_MERGER_TYPE = 2)
            AND IWSC.BIZ_TYPE in ('103', '201')
            AND IWSC.STOCK_TYPE = '4'
            <if test="startDateStr != null">
                AND IWSC.CREATE_TIME <![CDATA[ >= ]]> to_date(#{startDateStr},'yyyy/mm/dd')
            </if>
            <if test="endDateStr != null">
                AND IWSC.CREATE_TIME <![CDATA[ < ]]> to_date(#{endDateStr},'yyyy/mm/dd')+1
            </if>
        </where>
        GROUP BY IWSC.CREATE_TIME,
        IWSO.ORDER_CODE,
        IWSO.OUTER_ORDER_CODE,
        IOI.PARENTORDERID,
        IOS.WMS_SOURCE_NAME,
        IOI.GOODS_AMOUNT,
        IOI.GOODS_AMOUNT,
        IOI.SHIPPING_FEE,
        IOI.ALIPAY_NO,
        IOI.DISCOUNT,
        IOI.ORDER_AMOUNT,
        IOI.MONEY_PAID,
        IOI.PAY_NAME,
        IWSO.INVOICE_AMOUNT,
        IWSC.BIZ_TYPE,
        IRI.DEBIT_AMOUNT
        UNION ALL
        select IWSC.CREATE_TIME "stockTime",
        IWSO.ORDER_CODE "orderCode",
        IWSO.OUTER_ORDER_CODE "outerOrderCode",
        case
        when IOI.PARENTORDERID is null then
        IWSO.ORDER_CODE
        else
        IOI.PARENTORDERID
        end "parentOrderId",
        IOS.WMS_SOURCE_NAME "orderSource",
        IOI.GOODS_AMOUNT "goodsAmount",
        IOI.SHIPPING_FEE "shippingFee",
        IOI.ALIPAY_NO "paySerialNo",
        case
        when IOI.discount is null then
        0
        else
        IOI.discount
        end "bonus",
        case
        when IWSC.BIZ_TYPE = '201' then
        IOI.ORDER_AMOUNT
        else
        -IOI.ORDER_AMOUNT
        end "orderAmount",
        case
        when IWSC.BIZ_TYPE = '201' then
        IOI.MONEY_PAID
        else
        -IOI.MONEY_PAID
        end "paidAmount",
        IOI.PAY_NAME "payName",
        case
        when IWSC.BIZ_TYPE = '201' then
        IWSO.INVOICE_AMOUNT
        else
        -IWSO.INVOICE_AMOUNT
        end "invoiceAmount",
        IRI.DEBIT_AMOUNT "deductAmount",
        KOUKUAN.REASON "deductReason"
        from SYN_WMS_SALES_ORDER IWSO
        left join IUNI_ORDER_INFO IOI
        on IOI.ORDER_SN = IWSO.ORDER_CODE
        left join SYN_WMS_STOCK_CHANGE IWSC
        on IWSC.ORIGINAL_CODE = IWSO.ORDER_CODE
        LEFT JOIN IUNI_RETURNGOODS_INFO IRI
        ON IRI.ORDER_SN = IWSO.ORDER_CODE
        LEFT JOIN (SELECT ORDER_SN,
        MAX(REPLACE(TRIM(SYS_CONNECT_BY_PATH(REMARK,'{]')),'{]','')) REASON
        FROM (SELECT T1.ORDER_SN,
        T1.REMARK,
        ROW_NUMBER() OVER(PARTITION BY ORDER_SN ORDER BY ORDER_SN) RN
        FROM IUNI_RETURNGOODS_ITEM T1) T
        START WITH RN = 1
        CONNECT BY PRIOR RN + 1 = RN
        AND PRIOR ORDER_SN = ORDER_SN
        GROUP BY ORDER_SN) KOUKUAN
        ON KOUKUAN.ORDER_SN = IWSO.ORDER_CODE
        LEFT JOIN (SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME
        FROM IUNI_ORDER_SOURCE) IOS
        ON IOS.WMS_SOURCE_CODE = IWSO.ORDER_SOURCE
        <where>
            IWSO.ORDER_SOURCE in ('3', '4', '6', '8', '11')
            AND IWSO.ORDER_STATUS in ('1', '5', '6', '4', '7', '10')
            AND (IWSO.ORDER_MERGER_TYPE IS NULL OR IWSO.ORDER_MERGER_TYPE = 2)
            AND IWSC.BIZ_TYPE in ('102')
            AND IWSC.STOCK_TYPE = '4'
            <if test="startDateStr != null">
                AND IWSC.CREATE_TIME <![CDATA[ >= ]]> to_date(#{startDateStr},'yyyy/mm/dd')
            </if>
            <if test="endDateStr != null">
                AND IWSC.CREATE_TIME <![CDATA[ < ]]> to_date(#{endDateStr},'yyyy/mm/dd')+1
            </if>
        </where>
        GROUP BY IWSC.CREATE_TIME,
        IWSO.ORDER_CODE,
        IWSO.OUTER_ORDER_CODE,
        IOI.PARENTORDERID,
        IOS.WMS_SOURCE_NAME,
        IOI.GOODS_AMOUNT,
        IOI.GOODS_AMOUNT,
        IOI.SHIPPING_FEE,
        IOI.ALIPAY_NO,
        IOI.DISCOUNT,
        IOI.ORDER_AMOUNT,
        IOI.MONEY_PAID,
        IOI.PAY_NAME,
        IWSO.INVOICE_AMOUNT,
        IWSC.BIZ_TYPE,
        IRI.DEBIT_AMOUNT,
        KOUKUAN.REASON
    </select>

    <resultMap id="rebatesDetailsResult" type="com.iuni.data.persist.model.financial.RebatesDetailsTableDto">
        <result property="orderSource" column="orderSource"/>
        <result property="stockChangeTime" column="stockChangeTime"/>
        <result property="orderCode" column="orderCode"/>
        <result property="outerOrderCode" column="outerOrderCode"/>
        <result property="deliveryCode" column="deliveryCode"/>
        <result property="code" column="code"/>
        <result property="materialCode" column="materialCode"/>
        <result property="goodsName" column="goodsName"/>
        <result property="name" column="name"/>
        <result property="quantity" column="quantity"/>
        <result property="invoiceTCode" column="invoiceTCode"/>
        <result property="invoiceCode" column="invoiceCode"/>
        <result property="invoiceAmount" column="invoiceAmount"/>
        <result property="logisticsCost" column="logisticsCost"/>
    </resultMap>
    <select id="selectRebatesDetails" parameterType="com.iuni.data.persist.model.financial.RebatesDetailsQueryDto"
            resultMap="rebatesDetailsResult">
        SELECT IOS.WMS_SOURCE_NAME "orderSource",
        UNIX_TO_ORACLE(IOI.ADD_TIME) "addTime",
        IWSO.ORDER_CODE "orderCode",
        IWSO.OUTER_ORDER_CODE "outerOrderCode",
        IWSO.DELIVERY_CODE "deliveryCode",
        -IWSC.QUANTITY "quantity",
        CASE
        WHEN IWSO.INVOICE_TCODE IS NOT NULL AND
        IWSO.INVOICE_CODE IS NOT NULL THEN
        IWSO.INVOICE_AMOUNT
        ELSE
        0
        END "invoiceAmount",
        IWS.SKU_CODE "code",
        IWS.MATERIAL_CODE "materialCode",
        IWS.SKU_NAME "name",
        IWW.WARES_NAME "goodsName",
        IWSO.INVOICE_TCODE "invoiceTcode",
        IWSO.INVOICE_CODE "invoiceCode",
        CASE
        WHEN IWSO.LOGISTICS_COST IS NULL THEN
        0
        ELSE
        IWSO.LOGISTICS_COST
        END "logisticsCost",
        IOG.REBATE_RATIO "rebateRatio",
        IOG.REBATE_CONFIRM_AMOUNT "rebateConfirmAmount",
        IOG.REBATE_STATUS "rebateStatus",
        IU.USER_NAME "rebateUserName",
        IU.MAIL "rebateMail",
        IU.PHONENUM "rebatePhone"
        FROM SYN_WMS_STOCK_CHANGE IWSC
        LEFT JOIN SYN_WMS_STOCK IWSS
        ON IWSC.STOCK_ID = IWSS.ID
        LEFT JOIN SYN_WMS_WAREHOUSE IWWH
        ON IWSS.WAREHOUSE_ID = IWWH.ID
        LEFT JOIN SYN_WMS_SALES_ORDER IWSO
        ON IWSC.ORIGINAL_CODE = IWSO.ORDER_CODE
        AND IWSO.ORDER_SOURCE <![CDATA[ <> ]]> '9'
        LEFT JOIN IUNI_ORDER_INFO IOI
        ON IWSO.ORDER_CODE = IOI.ORDER_SN
        LEFT JOIN SYN_WMS_SKU IWS
        ON IWSS.SKU_ID = IWS.ID
        LEFT JOIN SYN_WMS_WARES IWW
        ON IWS.WARES_ID = IWW.ID
        LEFT JOIN SYN_WMS_WARES_CATEGORY IWWC
        ON IWW.CAT_ID = IWWC.ID
        LEFT JOIN IUNI_ORDER_GOODS IOG
        ON IOI.ORDER_SN = IOG.ORDER_ID
        AND IWS.SKU_CODE = IOG.SKU
        LEFT JOIN IUNI_USER IU
        ON IOG.REBATE_USERID = IU.ID
        LEFT JOIN (SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME FROM IUNI_ORDER_SOURCE) IOS
        ON IOS.WMS_SOURCE_CODE = IWSO.ORDER_SOURCE
        <where>
            IWSC.STOCK_TYPE = '4'
            AND IOG.REBATE_STATUS IS NOT NULL
            <if test="startDateStr != null">
                AND UNIX_TO_ORACLE(IOI.ADD_TIME) <![CDATA[ >= ]]> TO_DATE(#{startDateStr}, 'YYYY/MM/DD')
            </if>
            <if test="endDateStr != null">
                AND UNIX_TO_ORACLE(IOI.ADD_TIME) <![CDATA[ < ]]> TO_DATE(#{endDateStr}, 'YYYY/MM/DD') + 1
            </if>
        </where>
    </select>

    <!-- 大客户订单列表 -->
    <resultMap id="bigOrderDetailsResult" type="com.iuni.data.persist.model.financial.BigOrderDetailsTableDto">
        <result property="tid" column="TID"/>
        <result property="companyName" column="COMPANY_NAME"/>
        <result property="receiverAddress" column="RECEIVER_ADDRESS"/>
        <result property="totalFee" column="TOTAL_FEE"/>
        <result property="auditStatus" column="auditStatus"/>
        <result property="paymentStatus" column="paymentStatus"/>
        <result property="shippingStatus" column="shippingStatus"/>
        <result property="paymentConfirmed" column="PAYMENT_CONFIRMED"/>
        <result property="addTime" column="ADD_TIME"/>
        <result property="shippingTime" column="SHIPPING_TIME"/>
        <result property="paymentConfirmTime" column="PAYMENT_CONFIRM_TIME"/>
        <result property="code" column="SKU_CODE"/>
        <result property="name" column="SKU_NAME"/>
        <result property="materialCode" column="MATERIAL_CODE"/>
    </resultMap>
    <select id="selectBigOrderDetails" parameterType="com.iuni.data.persist.model.financial.BigOrderDetailsQueryDto"
            resultMap="bigOrderDetailsResult">
        SELECT IBT.TID,
        IBT.COMPANY_NAME,
        IBT.RECEIVER_ADDRESS,
        IBT.TOTAL_FEE,
        AUDIT_STATUS.EXPLAIN "auditStatus",
        PAYMENT_STATUS.EXPLAIN "paymentStatus",
        SHIPPING_STATUS.EXPLAIN "shippingStatus",
        IBT.PAYMENT_CONFIRMED,
        IBT.ADD_TIME,
        IBT.SHIPPING_TIME,
        IBT.PAYMENT_CONFIRM_TIME,
        IBO.SKU_CODE,
        IBO.SKU_NAME,
        SWS.MATERIAL_CODE
        FROM IUNI_BIG_TRADE IBT
        LEFT JOIN IUNI_BIG_ORDER IBO
        ON IBT.TID = IBO.TID
        LEFT JOIN SYN_WMS_SKU SWS
        ON SWS.SKU_CODE = IBO.SKU_CODE
        LEFT JOIN (SELECT IDSCV.VALUE, IDSCV.EXPLAIN
        FROM IUNI_DA_SYSTEM_CONSTANTS_VALUE IDSCV
        LEFT JOIN IUNI_DA_SYSTEM_CONSTANTS IDSC
        ON IDSC.ID = IDSCV.CONSTANT_ID
        WHERE IDSC.SYSTEM_CODE = 'OM'
        AND IDSC.CODE = 'BIG_TRADE.AUDIT_STATUS') AUDIT_STATUS
        ON AUDIT_STATUS.VALUE = IBT.AUDIT_STATUS
        LEFT JOIN (SELECT IDSCV.VALUE, IDSCV.EXPLAIN
        FROM IUNI_DA_SYSTEM_CONSTANTS_VALUE IDSCV
        LEFT JOIN IUNI_DA_SYSTEM_CONSTANTS IDSC
        ON IDSC.ID = IDSCV.CONSTANT_ID
        WHERE IDSC.SYSTEM_CODE = 'OM'
        AND IDSC.CODE = 'BIG_TRADE.PAYMENT_STATUS') PAYMENT_STATUS
        ON PAYMENT_STATUS.VALUE = IBT.PAYMENT_STATUS
        LEFT JOIN (SELECT IDSCV.VALUE, IDSCV.EXPLAIN
        FROM IUNI_DA_SYSTEM_CONSTANTS_VALUE IDSCV
        LEFT JOIN IUNI_DA_SYSTEM_CONSTANTS IDSC
        ON IDSC.ID = IDSCV.CONSTANT_ID
        WHERE IDSC.SYSTEM_CODE = 'OM'
        AND IDSC.CODE = 'BIG_TRADE.SHIPPING_STATUS') SHIPPING_STATUS
        ON SHIPPING_STATUS.VALUE = IBT.SHIPPING_STATUS
        <where>
            <if test="startDateStr != null">
                AND IBT.ADD_TIME <![CDATA[ >= ]]> TO_DATE(#{startDateStr}, 'YYYY/MM/DD')
            </if>
            <if test="endDateStr != null">
                AND IBT.ADD_TIME <![CDATA[ < ]]> TO_DATE(#{endDateStr}, 'YYYY/MM/DD') + 1
            </if>
            <if test="startDateStrOfShipping != null">
                AND IBT.SHIPPING_TIME, <![CDATA[ >= ]]> TO_DATE(#{startDateStrOfShipping}, 'YYYY/MM/DD')
            </if>
            <if test="endDateStrOfShipping != null">
                AND IBT.SHIPPING_TIME, <![CDATA[ < ]]> TO_DATE(#{endDateStrOfShipping}, 'YYYY/MM/DD') + 1
            </if>
            <if test="startDateStrOfPaymentConfirm != null">
                AND IBT.PAYMENT_CONFIRM_TIME <![CDATA[ >= ]]> TO_DATE(#{startDateStrOfPaymentConfirm}, 'YYYY/MM/DD')
            </if>
            <if test="endDateStrOfPaymentConfirm != null">
                AND IBT.PAYMENT_CONFIRM_TIME <![CDATA[ < ]]> TO_DATE(#{endDateStrOfPaymentConfirm}, 'YYYY/MM/DD') + 1
            </if>
        </where>
    </select>

</mapper>