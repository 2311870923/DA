# =================================
# ====== agent of node begin ======
# =================================
node.sources = iuniSrc
node.sinks = hdfsSink1 hdfsSink2 hdfsSink3 hdfsSink4 hdfsSink5
node.channels = hdfsChannel
node.sinkgroups = hdfsSinkGroup

# node hdfsChannel
node.channels.hdfsChannel.type = SPILLABLEMEMORY
node.channels.hdfsChannel.memoryCapacity = 1000000
node.channels.hdfsChannel.transactionCapacity = 10000
node.channels.hdfsChannel.overflowCapacity = 100000000
node.channels.hdfsChannel.avgEventSize = 3000
node.channels.hdfsChannel.keep-alive = 10
node.channels.hdfsChannel.write-timeout = 10
node.channels.hdfsChannel.checkpointDir = /data/flume-ng/checkpoint/hdfs
node.channels.hdfsChannel.dataDirs = /data/flume-ng/data/hdfs

# node iuniSrc
node.sources.iuniSrc.type = exec
node.sources.iuniSrc.command = tail -fn0 /usr/local/nginx-1.4.4/logs/www.iuni.com_access.log
node.sources.iuniSrc.interceptors = inte
node.sources.iuniSrc.interceptors.inte.type = com.iuni.data.flume.IuniLogInterceptor$Builder
node.sources.iuniSrc.interceptors.inte.startDate = 20150101000000
node.sources.iuniSrc.interceptors.inte.ipLibName = test
node.sources.iuniSrc.interceptors.inte.ipLibConf = /data/flume-ng/plugins.d/iunilog/ipLib.properties
node.sources.iuniSrc.interceptors.inte.adId = AD_ID
node.sources.iuniSrc.interceptors.inte.useIP = false
node.sources.iuniSrc.interceptors.inte.hostHeader = hostname
node.sources.iuniSrc.interceptors.inte.ipIndex = 4
node.sources.iuniSrc.interceptors.inte.urlIndex = 7
node.sources.iuniSrc.interceptors.inte.statusIndex = 8
node.sources.iuniSrc.interceptors.inte.statusError = false
node.sources.iuniSrc.interceptors.inte.requestTimeIndex = 3
node.sources.iuniSrc.interceptors.inte.static = false
node.sources.iuniSrc.interceptors.inte.staticRes = css js jpg jpeg png gif ico img bmp min small
node.sources.iuniSrc.interceptors.inte.staticRes.jpg.specialUrl = specialUrl
node.sources.iuniSrc.interceptors.inte.staticRes.jpeg.specialUrl = specialUrl
node.sources.iuniSrc.interceptors.inte.staticRes.png.specialUrl = specialUrl
node.sources.iuniSrc.interceptors.inte.staticRes.gif.specialUrl = specialUrl
node.sources.iuniSrc.interceptors.inte.staticRes.ico.specialUrl = specialUrl
node.sources.iuniSrc.interceptors.inte.staticRes.img.specialUrl = specialUrl
node.sources.iuniSrc.interceptors.inte.staticRes.bmp.specialUrl = specialUrl
# node iuniSrc channels
node.sources.iuniSrc.channels = hdfsChannel hbaseChannel

# node hdfsSink1
node.sinks.hdfsSink1.type=avro
node.sinks.hdfsSink1.hostname = nn01.hadoop
node.sinks.hdfsSink1.port = 4141
node.sinks.hdfsSink1.batch-size = 1000
# node hdfsSink1 channel
node.sinks.hdfsSink1.channel = hdfsChannel

# node hdfsSink2
node.sinks.hdfsSink2.type=avro
node.sinks.hdfsSink2.hostname = nn02.hadoop
node.sinks.hdfsSink2.port = 4141
node.sinks.hdfsSink2.batch-size = 1000
# node hdfsSink2 channel
node.sinks.hdfsSink2.channel = hdfsChannel

# node hdfsSink3
node.sinks.hdfsSink3.type=avro
node.sinks.hdfsSink3.hostname = dn01.hadoop
node.sinks.hdfsSink3.port = 4141
node.sinks.hdfsSink3.batch-size = 1000
# node hdfsSink3 channel
node.sinks.hdfsSink3.channel = hdfsChannel

# node hdfsSink4
node.sinks.hdfsSink4.type=avro
node.sinks.hdfsSink4.hostname = dn02.hadoop
node.sinks.hdfsSink4.port = 4141
node.sinks.hdfsSink4.batch-size = 1000
# node hdfsSink4 channel
node.sinks.hdfsSink4.channel = hdfsChannel

# node hdfsSink5
node.sinks.hdfsSink5.type=avro
node.sinks.hdfsSink5.hostname = dn03.hadoop
node.sinks.hdfsSink5.port = 4141
node.sinks.hdfsSink5.batch-size = 1000
# node hdfsSink5 channel
node.sinks.hdfsSink5.channel = hdfsChannel

# node hdfs sink group
node.sinkgroups.hdfsSinkGroup.sinks = hdfsSink1 hdfsSink2 hdfsSink3 hdfsSink4 hdfsSink5
node.sinkgroups.hdfsSinkGroup.processor.type = load_balance
node.sinkgroups.hdfsSinkGroup.processor.selector = round_robin
node.sinkgroups.hdfsSinkGroup.processor.backoff = true

# ===============================
# ====== agent of node end ======
# ===============================





# ======================================
# ====== agent of collector begin ======
# ======================================
collector.sources = collectorSource
collector.sinks = hdfsSink
collector.channels = hdfsChannel

# collector hdfsChannel
collector.channels.hdfsChannel.type = SPILLABLEMEMORY
collector.channels.hdfsChannel.memoryCapacity = 1000000
collector.channels.hdfsChannel.transactionCapacity = 10000
collector.channels.hdfsChannel.overflowCapacity = 100000000
collector.channels.hdfsChannel.avgEventSize = 3000
collector.channels.hdfsChannel.keep-alive = 10
collector.channels.hdfsChannel.write-timeout = 10
collector.channels.hdfsChannel.checkpointDir = /data/flume-ng/checkpoint/hdfs
collector.channels.hdfsChannel.dataDirs = /data/flume-ng/data/hdfs

# collector collectorSource
collector.sources.collectorSource.type = avro
collector.sources.collectorSource.bind = 0.0.0.0
collector.sources.collectorSource.port = 4141
# collector collectorSource channels
collector.sources.collectorSource.channels = hdfsChannel

# collector hdfsSink
collector.sinks.hdfsSink.type = hdfs
collector.sinks.hdfsSink.hdfs.path = hdfs://iuniHdfsCluster/flume/logs/use=%{suffixUsable}/year=%Y/month=%m/day=%d/hour=%H/minute=%M/time=%Y%m%d%H%M
collector.sinks.hdfsSink.hdfs.fileType = DataStream
collector.sinks.hdfsSink.hdfs.filePrefix = iuni
collector.sinks.hdfsSink.hdfs.fileSuffix = .log
collector.sinks.hdfsSink.hdfs.batchSize = 10000
collector.sinks.hdfsSink.hdfs.rollInterval = 30
collector.sinks.hdfsSink.hdfs.rollSize = 0
collector.sinks.hdfsSink.hdfs.rollCount = 10000
collector.sinks.hdfsSink.serializer = com.iuni.data.flume.IuniLogTextSerializer$Builder
# collector hdfsSink channel
collector.sinks.hdfsSink.channel = hdfsChannel

# ====================================
# ====== agent of collector end ======
# ====================================




# ====================================
# ====== agent of history begin ======
# ====================================
history.sources = historySrc
history.sinks = hdfsSink
history.channels = hdfsChannel

# history hdfsChannel
history.channels.hdfsChannel.type = SPILLABLEMEMORY
history.channels.hdfsChannel.memoryCapacity = 1000000
history.channels.hdfsChannel.transactionCapacity = 10000
history.channels.hdfsChannel.overflowCapacity = 100000000
history.channels.hdfsChannel.avgEventSize = 3000
history.channels.hdfsChannel.keep-alive = 10
history.channels.hdfsChannel.write-timeout = 10
history.channels.hdfsChannel.checkpointDir = /data/flume-ng/checkpoint/hdfs
history.channels.hdfsChannel.dataDirs = /data/flume-ng/data/hdfs

# history historySrc
history.sources.historySrc.type = avro
history.sources.historySrc.bind = 0.0.0.0
history.sources.historySrc.port = 14141
history.sources.historySrc.interceptors = inte
history.sources.historySrc.interceptors.inte.type = com.iuni.data.flume.IuniLogInterceptor$Builder
history.sources.historySrc.interceptors.inte.startDate = 20130101000000
history.sources.historySrc.interceptors.inte.ipLibName = test
history.sources.historySrc.interceptors.inte.ipLibConf = /data/flume-ng/plugins.d/iunilog/ipLib.properties
history.sources.historySrc.interceptors.inte.adId = AD_ID
history.sources.historySrc.interceptors.inte.useIP = false
history.sources.historySrc.interceptors.inte.hostHeader = hostname
history.sources.historySrc.interceptors.inte.ipIndex = 4
history.sources.historySrc.interceptors.inte.urlIndex = 7
history.sources.historySrc.interceptors.inte.statusIndex = 8
history.sources.historySrc.interceptors.inte.statusError = false
history.sources.historySrc.interceptors.inte.requestTimeIndex = 3
history.sources.historySrc.interceptors.inte.static = false
history.sources.historySrc.interceptors.inte.staticRes = css js jpg jpeg png gif ico img bmp min small
history.sources.historySrc.interceptors.inte.staticRes.jpg.specialUrl = specialUrl
history.sources.historySrc.interceptors.inte.staticRes.jpeg.specialUrl = specialUrl
history.sources.historySrc.interceptors.inte.staticRes.png.specialUrl = specialUrl
history.sources.historySrc.interceptors.inte.staticRes.gif.specialUrl = specialUrl
history.sources.historySrc.interceptors.inte.staticRes.ico.specialUrl = specialUrl
history.sources.historySrc.interceptors.inte.staticRes.img.specialUrl = specialUrl
history.sources.historySrc.interceptors.inte.staticRes.bmp.specialUrl = specialUrl
# node iuniSrc channels
history.sources.historySrc.channels = hdfsChannel

# history hdfsSink
history.sinks.hdfsSink.type = hdfs
history.sinks.hdfsSink.hdfs.path = hdfs://iuniHdfsCluster/flume/logs/use=%{suffixUsable}/year=%Y/month=%m/day=%d/hour=%H/minute=%M/time=%Y%m%d%H%M
history.sinks.hdfsSink.hdfs.fileType = DataStream
history.sinks.hdfsSink.hdfs.filePrefix = iuni
history.sinks.hdfsSink.hdfs.fileSuffix = .log
history.sinks.hdfsSink.hdfs.batchSize = 10000
history.sinks.hdfsSink.hdfs.rollInterval = 30
history.sinks.hdfsSink.hdfs.rollSize = 0
history.sinks.hdfsSink.hdfs.rollCount = 10000
history.sinks.hdfsSink.serializer = com.iuni.data.flume.IuniLogTextSerializer$Builder
# history hdfsSink channel
history.sinks.hdfsSink.channel = hdfsChannel

# ==================================
# ====== agent of history end ======
# ==================================




